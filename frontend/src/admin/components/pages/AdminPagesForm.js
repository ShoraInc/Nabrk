// components/admin/AdminPagesForm.js
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import pagesApi from '../../../api/pagesApi';
import AdminSidebar from '../shared/AdminSidebar';
import { ADMIN_ROUTES } from '../../../routes/constants';

const AdminPagesForm = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const isEdit = Boolean(id);

  const [sidebarExpanded, setSidebarExpanded] = useState(true);
  const [formData, setFormData] = useState({
    title: '',
    slug: '',
    status: 'draft'
  });

  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState(null);
  const [slugError, setSlugError] = useState(null);

  useEffect(() => {
    if (isEdit) {
      loadPage();
    }
  }, [id, isEdit]);

  const loadPage = async () => {
    try {
      setLoading(true);
      setError(null);
      const page = await pagesApi.getPageByIdAdmin(id);
      setFormData({
        title: page.title || '',
        slug: page.slug || '',
        status: page.status || 'draft'
      });
    } catch (err) {
      setError(err.message);
      console.error('Error loading page:', err);
    } finally {
      setLoading(false);
    }
  };

  const generateSlug = (title) => {
    return title
      .toLowerCase()
      .replace(/[–∞-—è]/g, (char) => {
        const translit = {
          '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
          '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
          '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
          '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
          '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya'
        };
        return translit[char] || char;
      })
      .replace(/[^a-z0-9\-]/g, '-')
      .replace(/-+/g, '-')
      .replace(/^-|-$/g, '');
  };

  const handleTitleChange = (e) => {
    const title = e.target.value;
    setFormData(prev => ({
      ...prev,
      title
    }));

    // –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è slug —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (!isEdit && title) {
      const newSlug = generateSlug(title);
      setFormData(prev => ({
        ...prev,
        slug: newSlug
      }));
    }
  };

  const handleSlugChange = (e) => {
    const slug = e.target.value.toLowerCase().replace(/[^a-z0-9\-]/g, '-');
    setFormData(prev => ({
      ...prev,
      slug
    }));
    setSlugError(null);
  };

  const validateForm = () => {
    if (!formData.title.trim()) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return false;
    }

    if (!formData.slug.trim()) {
      setError('Slug –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω');
      return false;
    }

    if (formData.slug.length < 3) {
      setSlugError('Slug –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞');
      return false;
    }

    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    try {
      setSaving(true);
      setError(null);

      if (isEdit) {
        await pagesApi.updatePage(id, formData);
      } else {
        await pagesApi.createPage(formData);
      }

      navigate(ADMIN_ROUTES.PAGES_DRAFTS);
    } catch (err) {
      setError(err.message);
      console.error('Error saving page:', err);
    } finally {
      setSaving(false);
    }
  };

  const handleCancel = () => {
    navigate(ADMIN_ROUTES.PAGES_DRAFTS);
  };

  const contentClass = `flex-1 transition-all duration-300 p-6 ${
    sidebarExpanded ? 'ml-64' : 'ml-16'
  }`;

  if (loading) {
    return (
      <div className="flex min-h-screen bg-gray-100">
        <AdminSidebar onToggle={setSidebarExpanded} />
        <div className={contentClass}>
          <div className="flex justify-center items-center h-64">
            <div className="text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="flex min-h-screen bg-gray-100">
      <AdminSidebar onToggle={setSidebarExpanded} />
      
      <div className={contentClass}>
        <div className="mb-6 pt-12 lg:pt-0">
          <h1 className="text-2xl font-bold text-gray-800">
            {isEdit ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É' : '–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É'}
          </h1>
          <p className="text-gray-600 mt-2">
            {isEdit ? '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã' : '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'}
          </p>
        </div>

        {error && (
          <div className="mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
            {error}
          </div>
        )}

        <div className="max-w-4xl mx-auto">
          <form onSubmit={handleSubmit}>
            <div className="grid grid-cols-1 xl:grid-cols-3 gap-8">
              {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è - 2 –∫–æ–ª–æ–Ω–∫–∏ */}
              <div className="xl:col-span-2 space-y-6">
                {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
                <div className="bg-white p-6 rounded-lg shadow-md">
                  <label className="block text-sm font-semibold text-gray-700 mb-3">
                    –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã *
                  </label>
                  <input
                    type="text"
                    value={formData.title}
                    onChange={handleTitleChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
                    required
                  />
                  <p className="mt-2 text-sm text-gray-500">
                    –ü—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É
                  </p>
                </div>

                {/* URL Slug */}
                <div className="bg-white p-6 rounded-lg shadow-md">
                  <label className="block text-sm font-semibold text-gray-700 mb-3">
                    URL Slug *
                  </label>
                  <div className="flex items-center border border-gray-300 rounded-lg overflow-hidden focus-within:ring-2 focus-within:ring-blue-500">
                    <span className="bg-gray-100 px-4 py-3 text-gray-600 font-medium border-r border-gray-300">
                      /
                    </span>
                    <input
                      type="text"
                      value={formData.slug}
                      onChange={handleSlugChange}
                      className={`flex-1 px-4 py-3 focus:outline-none ${slugError ? 'border-red-500' : ''}`}
                      placeholder="url-slug"
                      required
                    />
                  </div>
                  {slugError && (
                    <div className="mt-2 text-sm text-red-600">
                      {slugError}
                    </div>
                  )}
                  <div className="mt-2 text-sm text-gray-500">
                    Slug –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –¥–µ—Ñ–∏—Å—ã.
                  </div>
                </div>

                {/* –°—Ç–∞—Ç—É—Å */}
                <div className="bg-white p-6 rounded-lg shadow-md">
                  <label className="block text-sm font-semibold text-gray-700 mb-3">
                    –°—Ç–∞—Ç—É—Å
                  </label>
                  <select
                    value={formData.status}
                    onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value }))}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  >
                    <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
                    <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω</option>
                  </select>
                  <p className="mt-2 text-sm text-gray-500">
                    –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ - –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                  </p>
                </div>

                <div className="bg-blue-50 p-6 rounded-lg border border-blue-200">
                  <h3 className="text-lg font-semibold text-blue-800 mb-3">üîó –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä URL</h3>
                  <div className="bg-white p-3 rounded border">
                    <span className="text-blue-600 font-mono">
                      {window.location.origin}/page/{formData.slug || 'url-slug'}
                    </span>
                  </div>
                </div>
              </div>

              {/* –ü—Ä–∞–≤–∞—è –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å - 1 –∫–æ–ª–æ–Ω–∫–∞ */}
              <div className="space-y-6">
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
                {isEdit && (
                  <div className="bg-white p-6 rounded-lg shadow-md">
                    <h3 className="text-lg font-semibold text-gray-800 mb-4">üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    <div className="space-y-3 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-600">ID:</span>
                        <span className="font-medium">{id}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                        <span className={`px-2 py-1 rounded text-xs font-medium ${
                          formData.status === 'published' 
                            ? 'bg-green-100 text-green-800' 
                            : 'bg-yellow-100 text-yellow-800'
                        }`}>
                          {formData.status === 'published' ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}
                        </span>
                      </div>
                    </div>
                  </div>
                )}

                {/* –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ */}
                <div className="bg-green-50 p-6 rounded-lg border border-green-200">
                  <h3 className="text-lg font-semibold text-green-800 mb-3">‚úÖ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h3>
                  <ul className="text-sm text-green-700 space-y-2">
                    {isEdit ? (
                      <>
                        <li>‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</li>
                        <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –±–ª–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</li>
                        <li>‚Ä¢ –û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                      </>
                    ) : (
                      <>
                        <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</li>
                        <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–ª–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∑–∞–≥–æ–ª–æ–≤–∫–∏, —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)</li>
                        <li>‚Ä¢ –û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
                      </>
                    )}
                  </ul>
                </div>

                {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
                <div className="bg-blue-50 p-6 rounded-lg border border-blue-200">
                  <h3 className="text-lg font-semibold text-blue-800 mb-3">üí° –°–æ–≤–µ—Ç—ã</h3>
                  <ul className="text-sm text-blue-700 space-y-2">
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü</li>
                    <li>‚Ä¢ Slug –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º –∏ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–º</li>
                    <li>‚Ä¢ –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–ª—è–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç</li>
                    <li>‚Ä¢ –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω—É–∂–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –±–ª–æ–∫</li>
                  </ul>
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="mt-8 bg-white p-6 rounded-lg shadow-md">
              <div className="flex flex-col sm:flex-row gap-4 justify-between">
                <div className="flex flex-col sm:flex-row gap-4">
                  <button
                    type="submit"
                    disabled={saving}
                    className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
                  >
                    {saving ? (
                      <>
                        <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                      </>
                    ) : (
                      isEdit ? 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : 'üìù –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É'
                    )}
                  </button>
                  
                  <button
                    type="button"
                    onClick={handleCancel}
                    className="bg-gray-500 hover:bg-gray-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors"
                  >
                    ‚ùå –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
                
                <div className="text-sm text-gray-500 flex items-center">
                  <span>–í—Å–µ –ø–æ–ª—è –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ * –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</span>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default AdminPagesForm;