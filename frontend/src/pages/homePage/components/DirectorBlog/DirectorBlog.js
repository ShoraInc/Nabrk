// src/pages/DirectorBlog/DirectorBlog.js

import React, { useState, useEffect } from 'react';
import './DirectorBlog.scss';

const DirectorBlog = () => {
  const [language, setLanguage] = useState('rus');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [notification, setNotification] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });

  const content = {
    'kaz': {
      title: '“ö“±—Ä–º–µ—Ç—Ç—ñ –æ“õ—ã—Ä–º–∞–Ω–¥–∞—Ä!',
      paragraphs: [
        '–°—ñ–∑–¥–µ—Ä–¥—ñ“£ –æ–π–ª–∞—Ä—ã“£—ã–∑–¥—ã, –∏–¥–µ—è–ª–∞—Ä—ã“£—ã–∑–¥—ã, “±—Å—ã–Ω—ã—Å—Ç–∞—Ä—ã“£—ã–∑–¥—ã –∂”ô–Ω–µ —Å“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑–¥—ã –µ—Å—Ç—É ‚Äì –º–µ–Ω “Ø—à—ñ–Ω ”©—Ç–µ –º–∞“£—ã–∑–¥—ã. ”ò—Ä–±—ñ—Ä –∂–æ–ª–¥–∞–Ω“ì–∞–Ω –ø—ñ–∫—ñ—Ä –º–µ–Ω “Ø—à—ñ–Ω “õ“±–Ω–¥—ã, —Å–µ–±–µ–±—ñ –¥”ô–ª —Å—ñ–∑–¥–µ—Ä–¥—ñ“£ “õ–æ–ª–¥–∞—É–ª–∞—Ä—ã“£—ã–∑ –±—ñ–∑–¥—ñ –¥–∞–º—É“ì–∞, –∂–∞“õ—Å–∞—Ä–∞ —Ç“Ø—Å—É–≥–µ —à–∞–±—ã—Ç—Ç–∞–Ω–¥—ã—Ä–∞–¥—ã.',
        '–ï–Ω–¥—ñ –º–µ–Ω—ñ–º–µ–Ω —Ç—ñ–∫–µ–ª–µ–π –±–∞–π–ª–∞–Ω—ã—Å—ã–ø, —Å—ñ–∑–¥—ñ —Ç–æ–ª“ì–∞–Ω–¥—ã—Ä–∞—Ç—ã–Ω –º”ô—Å–µ–ª–µ–ª–µ—Ä–º–µ–Ω –±”©–ª—ñ—Å—É–≥–µ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫ –±–∞—Ä. –ñ–∞–∑“ì–∞–Ω –±–∞—Ä–ª—ã“õ —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä—ã“£—ã–∑–¥—ã ”©–∑—ñ–º –æ“õ—ã–ø, “õ–æ–ª—ã–º–Ω–∞–Ω –∫–µ–ª–≥–µ–Ω—à–µ –∂–∞—É–∞–ø –±–µ—Ä—É–≥–µ —Ç—ã—Ä—ã—Å–∞–º—ã–Ω.',
        '–ê—à—ã“õ ”ô—Ä—ñ —Å–µ–Ω—ñ–º–¥—ñ –¥–∏–∞–ª–æ–≥ –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞–º—ã–∑–¥—ã ”ô—Ä“õ–∞–π—Å—ã“£—ã–∑“ì–∞ –∂–∞“õ—ã–Ω–¥–∞–π —Ç“Ø—Å–µ–¥—ñ –¥–µ–ø —Å–µ–Ω–µ–º—ñ–Ω.',
        '–Ü–∑–≥—ñ –Ω–∏–µ—Ç–ø–µ–Ω,',
        '–°–µ–∏—Ç–æ–≤–∞ –ö“Ø–º—ñ—Å “ö–∞—Ä—Å–∞“õ–±–∞–π“õ—ã–∑—ã',
        '“ö–∞–∑–∞“õ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å—ã–Ω—ã“£ “∞–ª—Ç—Ç—ã“õ –∞–∫–∞–¥–µ–º–∏—è–ª—ã“õ –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã–Ω—ã“£ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ã'
      ],
      name: '–°–µ–∏—Ç–æ–≤–∞ –ö“Ø–º—ñ—Å “ö–∞—Ä—Å–∞“õ–±–∞–π“õ—ã–∑—ã',
      position: '“ö–∞–∑–∞“õ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å—ã–Ω—ã“£ “∞–ª—Ç—Ç—ã“õ –∞–∫–∞–¥–µ–º–∏—è–ª—ã“õ –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã–Ω—ã“£ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ã',
      headerText: '“ö–∞–∑–∞“õ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å—ã–Ω—ã“£ “∞–ª—Ç—Ç—ã“õ –∞–∫–∞–¥–µ–º–∏—è–ª—ã“õ –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã',
      contactTitle: '–ú–∞“ì–∞–Ω —Ö–∞–±–∞—Ä–ª–∞—Å—É',
      namePlaceholder: '–ê—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑',
      emailPlaceholder: '–°—ñ–∑–¥—ñ“£ –ø–æ—à—Ç–∞“£—ã–∑',
      messagePlaceholder: '–•–∞–±–∞—Ä–ª–∞–º–∞“£—ã–∑',
      submitBtn: '–ñ—ñ–±–µ—Ä—É',
      successMessage: '–•–∞–±–∞—Ä–ª–∞–º–∞ —Å”ô—Ç—Ç—ñ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!',
      errorMessage: '–•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –∂—ñ–±–µ—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –ø–∞–π–¥–∞ –±–æ–ª–¥—ã'
    },
    'rus': {
      title: '–î–æ—Ä–æ–≥–∏–µ —á–∏—Ç–∞—Ç–µ–ª–∏!',
      paragraphs: [
        '–ú–Ω–µ –≤–∞–∂–Ω–æ —Å–ª—ã—à–∞—Ç—å –≤–∞—à –≥–æ–ª–æ—Å ‚Äî –≤–∞—à–∏ –º—ã—Å–ª–∏, –∏–¥–µ–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –≤–æ–ø—Ä–æ—Å—ã. –ö–∞–∂–¥–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω—è —Ü–µ–Ω–Ω–æ, –≤–µ–¥—å –∏–º–µ–Ω–Ω–æ –≤—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç–µ –Ω–∞—Å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ.',
        '–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø—Ä—è–º—É—é –¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π —Ç–µ–º, —á—Ç–æ –≤–æ–ª–Ω—É–µ—Ç –≤–∞—Å –∫–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—è. –Ø –±—É–¥—É –ª–∏—á–Ω–æ —á–∏—Ç–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å—Ç–∞—Ä–∞—Ç—å—Å—è –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö.',
        '–í–µ—Ä—é, —á—Ç–æ –æ—Ç–∫—Ä—ã—Ç—ã–π –∏ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å–¥–µ–ª–∞–µ—Ç –Ω–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É –µ—â—ë –±–ª–∏–∂–µ –∫ –∫–∞–∂–¥–æ–º—É –∏–∑ –≤–∞—Å.',
        '–° —É–≤–∞–∂–µ–Ω–∏–µ–º,',
        '–°–µ–∏—Ç–æ–≤–∞ –ö“Ø–º–∏—Å –ö–∞—Ä—Å–∞–∫–±–∞–µ–≤–Ω–∞',
        '–î–∏—Ä–µ–∫—Ç–æ—Ä –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω'
      ],
      name: '–°–µ–∏—Ç–æ–≤–∞ –ö“Ø–º–∏—Å –ö–∞—Ä—Å–∞–∫–±–∞–µ–≤–Ω–∞',
      position: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
      headerText: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
      contactTitle: '–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π',
      namePlaceholder: '–í–∞—à–µ –∏–º—è',
      emailPlaceholder: '–í–∞—à–∞ –ø–æ—á—Ç–∞',
      messagePlaceholder: '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      submitBtn: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
      successMessage: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
      errorMessage: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
    },
    'eng': {
      title: 'Dear readers,',
      paragraphs: [
        'It is important for me to hear your voice ‚Äî your thoughts, ideas, suggestions, and questions. Every message is valuable to me, as it is your support that inspires us to grow and improve.',
        'You now have the opportunity to contact me directly and share anything that concerns you as a reader. I will personally read all your messages and do my best to respond.',
        'I believe that open and trustful dialogue will make our library even closer to each of you.',
        'With respect,',
        'Kumis Karsakbaevna Seitova',
        'Director of the National Academic Library of the Republic of Kazakhstan'
      ],
      name: 'Kumis Karsakbaevna Seitova',
      position: 'Director of the National Academic Library of the Republic of Kazakhstan',
      headerText: 'National Academic Library of the Republic of Kazakhstan',
      contactTitle: 'Contact Me',
      namePlaceholder: 'Your Name',
      emailPlaceholder: 'Your Email',
      messagePlaceholder: 'Your Message',
      submitBtn: 'Send',
      successMessage: 'Message sent successfully!',
      errorMessage: 'Error sending message'
    }
  };

  const currentContent = content[language];

  const showNotification = (message, type = 'success') => {
    setNotification({ message, type });
    setTimeout(() => setNotification(null), 5000);
  };

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (isSubmitting) return;
    
    setIsSubmitting(true);
    
    try {
      const response = await fetch('/api/send-director-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          ...formData,
          language
        })
      });
      
      const result = await response.json();
      
      if (result.success) {
        showNotification(currentContent.successMessage, 'success');
        setFormData({ name: '', email: '', message: '' });
      } else {
        showNotification(currentContent.errorMessage, 'error');
      }
    } catch (error) {
      showNotification(currentContent.errorMessage, 'error');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="director-blog-container">
      {/* Notification */}
      {notification && (
        <div className={`director-notification director-notification-${notification.type} ${notification ? 'show' : ''}`}>
          {notification.message}
        </div>
      )}

      {/* Header */}
      <header className="director-header">
        <div className="director-header-content">
          {/* Language Selector */}
          <div className="director-language-selector">
            {Object.keys(content).map((lang) => (
              <button
                key={lang}
                onClick={() => setLanguage(lang)}
                className={`director-lang-btn ${language === lang ? 'active' : ''}`}
              >
                {lang === 'rus' ? '–†—É—Å—Å–∫–∏–π' : lang === 'kaz' ? '“ö–∞–∑–∞“õ—à–∞' : 'English'}
              </button>
            ))}
          </div>
          
          {/* Logo Section */}
          <div className="director-logo-section">
            <div className="director-logo">
              <div className="director-logo-placeholder"></div>
            </div>
            <a href="https://nabrk.kz" target="_blank" rel="noopener noreferrer" className="director-header-title">
              {currentContent.headerText}
            </a>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="director-main">
        {/* Sidebar */}
        <aside className="director-sidebar">
          <div className="director-avatar-section">
            <div className="director-avatar">
              <div className="director-avatar-placeholder"></div>
            </div>
            <h2 className="director-name-text">{currentContent.name}</h2>
            <p className="director-position-text">{currentContent.position}</p>
            
            <div className="director-social-links">
              <a href="https://www.facebook.com/share/15gtL7SYHV/" target="_blank" rel="noopener noreferrer" className="director-social-link">
                üìò
              </a>
              <a href="https://www.instagram.com/akademiyalik_kitapkhana?igsh=eHVldGYzM3BsZGMy" target="_blank" rel="noopener noreferrer" className="director-social-link">
                üì∑
              </a>
            </div>
          </div>
        </aside>

        {/* Content Area */}
        <div className="director-content">
          <h1 className="director-title">{currentContent.title}</h1>
          <div className="director-paragraphs">
            {currentContent.paragraphs.map((paragraph, index) => (
              <p key={index} className="director-paragraph">
                {paragraph}
              </p>
            ))}
          </div>
        </div>
      </main>

      {/* Contact Form */}
      <section className="director-contact-section">
        <div className="director-contact-container">
          <form className="director-contact-form" onSubmit={handleSubmit}>
            <h2 className="director-contact-title">{currentContent.contactTitle}</h2>
            
            <div className="director-form-group">
              <input 
                type="text" 
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="director-form-input" 
                placeholder={currentContent.namePlaceholder}
                required
              />
            </div>
            
            <div className="director-form-group">
              <input 
                type="email" 
                name="email"
                value={formData.email}
                onChange={handleInputChange}
                className="director-form-input" 
                placeholder={currentContent.emailPlaceholder}
                required
              />
            </div>
            
            <div className="director-form-group">
              <textarea 
                name="message"
                value={formData.message}
                onChange={handleInputChange}
                className="director-form-textarea" 
                placeholder={currentContent.messagePlaceholder}
                required
              />
            </div>
            
            <button type="submit" className="director-submit-btn" disabled={isSubmitting}>
              {isSubmitting ? (
                <div className="director-loading">
                  <div className="director-spinner"></div>
                  <span>{language === 'rus' ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : language === 'kaz' ? '–ñ—ñ–±–µ—Ä—ñ–ª—ñ–ø –∂–∞—Ç—ã—Ä...' : 'Sending...'}</span>
                </div>
              ) : (
                currentContent.submitBtn
              )}
            </button>
          </form>
        </div>
      </section>
    </div>
  );
};

export default DirectorBlog;